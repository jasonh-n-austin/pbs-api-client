buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5"
    }
}

['java', 'signing', 'maven', 'com.jfrog.bintray'].each {
    apply plugin: it
}

//should run `gradlew clean gPFFJP pP publish`

group 'pbs-api-client'
//artifactId 'pbs-api-client'
version '1.3.0'

repositories {
    jcenter()
    maven {
        url "http://maven2.gueck.com/releases"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile group: 'oauth.signpost', name: 'signpost-core', version: '1.2.1.2'
    compile group: 'oauth.signpost', name: 'signpost-commonshttp4', version: '1.2.1.2'
    compile group: 'mikaelhg', name: 'urlbuilder', version: '1.3.2'
    compile group: 'org.json', name: 'json', version: '20140107'
    compile 'com.google.inject:guice:2.0-no_aop'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'com.cedarsoftware', name: 'json-io', version: '2.7.0'
}


sourceCompatibility = 1.6
targetCompatibility = 1.6

clean { delete("$rootDir/out") }

println "> Running Gradle [${project.gradle.gradleVersion}], Groovy [${GroovySystem.version}], Java [${System.getProperty('java.version')}]"
println "> Building [${project.group}:${project.name}:${project.version}]"
task wrapper(type: Wrapper) { gradleVersion = '2.0' }

// javadoc.jar generation
task javadocJar(type: Jar, dependsOn: javadoc) { // (1)
    classifier = 'javadoc'
    from javadoc.destinationDir
}
// sources.jar generation
task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
// summarize artifacts
artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}
// sign pom
signing {
    sign configurations.archives
}
task writeNewPom << {
    pom {
        pomDirName 'libs'
        project {
            name 'API Client/SDK for Paperbackswap.com'
            description 'Provides OAuth, URLs, and deserialization of PBS API'
            url 'https://github.com/jasonh-n-austin/pbs-api-client'
            inceptionYear '2014'
            scm {
                url 'https://github.com/jasonh-n-austin/pbs-api-client.git'
                connection 'scm:https://jasharmon@github.com/jasonh-n-austin/pbs-api-client.git'
                developerConnection 'scm:git://github.com/jasonh-n-austin/pbs-api-client.git'
            }
            licenses {
                license {
                    name 'The MIT License (MIT)'
                    url 'http://www.opensource.org/licenses/mit-license.php'
                    distribution 'repo'
                }
                developer {
                    id 'jasonh-n-austin'
                    name 'Jason Harmon'
                    email 'jason.harmon@gmail.com'
                }
            }
        }
    }.writeTo("$buildDir/pom.xml")
    sign "$buildDir/pom.xml"
}
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            pom.project {
                name 'API Client/SDK for Paperbackswap.com'
                description 'Provides OAuth, URLs, and deserialization of PBS API'
                url 'https://github.com/jasonh-n-austin/pbs-api-client'
                inceptionYear '2014'
                scm {
                    url 'https://github.com/jasonh-n-austin/pbs-api-client.git'
                    connection 'scm:https://jasharmon@github.com/jasonh-n-austin/pbs-api-client.git'
                    developerConnection 'scm:git://github.com/jasonh-n-austin/pbs-api-client.git'
                }
                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                        distribution 'repo'
                    }
                    developer {
                        id 'jasonh-n-austin'
                        name 'Jason Harmon'
                        email 'jason.harmon@gmail.com'
                    }
                }
            }
        }
    }
}